# https://docs.nginx.com/nginx-app-protect/configuration/
# user  nginx;
# worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # # app_protect_enable on; # This is how you enable NGINX App Protect in the relevant context/block
    # # app_protect_policy_file "/etc/nginx/NginxDefaultPolicy.json"; # This is a reference to the policy file to use. If not defined, the default policy is used
    # # app_protect_security_log_enable on; # This section enables the logging capability
    # # app_protect_security_log "/etc/app_protect/conf/log_default.json" syslog:server=127.0.0.1:515; # This is where the remote logger is defined in terms of: logging options (defined in the referenced file), log server IP, log server port

    # server {
    #     listen 80;
    #     server_name localhost;

    #     location / {
    #         proxy_pass http://api:5000/$request_uri;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     }
    # }
    server {
        listen 80;
        client_max_body_size 4G;

        server_name localhost;

        location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html =404;
        }

        location /api {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://api:8000;
        }

        # location /static {
        # # path for static files
        # root /path/to/app/static;
        # }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream uvicorn {
        server unix:/tmp/uvicorn.sock;
    }
}